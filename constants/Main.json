{
  "address": "0x5Aa916a49E054B12650181E4D3E6534e0702AaF8",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_priceFeed",
          "type": "address"
        },
        {
          "internalType": "contract Creators",
          "name": "_creatorsContract",
          "type": "address"
        },
        {
          "internalType": "contract Subscriptions",
          "name": "_subscriptionsContract",
          "type": "address"
        },
        {
          "internalType": "contract Content",
          "name": "_contentContract",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_version",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "Main__NotEnoughtRights",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Main__NotOwner",
      "type": "error"
    },
    {
      "inputs": [],
      "name": "Main__creatorNotFound",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "contentID",
          "type": "uint256"
        }
      ],
      "name": "contentAdded",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "contentDeleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "contentID",
          "type": "uint256"
        }
      ],
      "name": "contentUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "contractWithdrawEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "creatorDetetion",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "creatorRegistration",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "creatorRetrieve",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "_avatar",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_subscriptionPrice",
          "type": "uint256"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "creatorUpdate",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "creatorWithdrawEvent",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "followerAddress",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "creatorAddress",
          "type": "address"
        }
      ],
      "name": "subscriptionBought",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_contentType",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        }
      ],
      "name": "addContent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creatorAddress",
          "type": "address"
        }
      ],
      "name": "buySubscription",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractFee",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "contractWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "creatorWithdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contentID",
          "type": "uint256"
        }
      ],
      "name": "deleteContent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "deleteCreator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creatorAddress",
          "type": "address"
        }
      ],
      "name": "findCreatorDataByAdress",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contentID",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_message",
          "type": "bytes32"
        }
      ],
      "name": "getContent",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_message",
          "type": "bytes32"
        }
      ],
      "name": "getContractBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "bytes32",
          "name": "_message",
          "type": "bytes32"
        }
      ],
      "name": "getCreatorBalance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_startIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_limit",
          "type": "uint256"
        }
      ],
      "name": "getCreatorsIDs",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_follower",
          "type": "address"
        }
      ],
      "name": "getFollowerSubscriptions",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getPriceLevel",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creator",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_follower",
          "type": "address"
        }
      ],
      "name": "getSubscriptionByCreatorAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_creatorAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_followerAddress",
          "type": "address"
        }
      ],
      "name": "getSubscriptionContent",
      "outputs": [
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "usd",
          "type": "uint256"
        }
      ],
      "name": "getUSDPriceInCoins",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_avatar",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_subscriptionPrice",
          "type": "uint256"
        }
      ],
      "name": "registerAsCreator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "retrieveCreator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_contentID",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_contentType",
          "type": "uint256"
        },
        {
          "internalType": "string",
          "name": "_link",
          "type": "string"
        }
      ],
      "name": "updateContent",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_description",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_avatar",
          "type": "string"
        },
        {
          "internalType": "uint256",
          "name": "_subscriptionPrice",
          "type": "uint256"
        }
      ],
      "name": "updateCreator",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    }
  ],
  "transactionHash": "0xc369e72cfa29bf881cfb0bf4b782d1fc61feb97b5ed5246de70bf952f3c3525f",
  "receipt": {
    "to": null,
    "from": "0x233a3C28803B5c01431f81cF8fEa7545AAd24A63",
    "contractAddress": "0x5Aa916a49E054B12650181E4D3E6534e0702AaF8",
    "transactionIndex": 26,
    "gasUsed": "2169338",
    "logsBloom": "0x00000000000000000000000000000000000000000000000000000000000000000000020000000000000000000000000000008000000000000000000000008000000000000000000000000000000000800000000000000000000100000000000000000000000000000000000000000000000008000000000080000100000000000000000000000000000000000000000000000000000000000000000000000000200000000000000000080000000000000000000000000000000000000000004000000000000000000001000000000100000000000000000000100000000000000000000000000000000000000000000000000000000000000000000000100000",
    "blockHash": "0x2cdbfd3b3c65e79d6607dd0b9ca7110e9c99949d02737f6007fd53567b7e0b20",
    "transactionHash": "0xc369e72cfa29bf881cfb0bf4b782d1fc61feb97b5ed5246de70bf952f3c3525f",
    "logs": [
      {
        "transactionIndex": 26,
        "blockNumber": 28214282,
        "transactionHash": "0xc369e72cfa29bf881cfb0bf4b782d1fc61feb97b5ed5246de70bf952f3c3525f",
        "address": "0x0000000000000000000000000000000000001010",
        "topics": [
          "0x4dfe1bbbcf077ddc3e01291eea2d5c70c2b422b415d95645b9adcfd678cb1d63",
          "0x0000000000000000000000000000000000000000000000000000000000001010",
          "0x000000000000000000000000233a3c28803b5c01431f81cf8fea7545aad24a63",
          "0x0000000000000000000000003a22c8bc68e98b0faf40f349dd2b2890fae01484"
        ],
        "data": "0x00000000000000000000000000000000000000000000000000134480e81710060000000000000000000000000000000000000000000000001e20083ac464ec91000000000000000000000000000000000000000000000087c1b971f59dfb94670000000000000000000000000000000000000000000000001e0cc3b9dc4ddc8b000000000000000000000000000000000000000000000087c1ccb6768612a46d",
        "logIndex": 140,
        "blockHash": "0x2cdbfd3b3c65e79d6607dd0b9ca7110e9c99949d02737f6007fd53567b7e0b20"
      }
    ],
    "blockNumber": 28214282,
    "cumulativeGasUsed": "7082193",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0xd0D5e3DB44DE05E9F294BB0a3bEEaF030DE24Ada",
    "0xDeabDEf35ecA0382f8b041B14E9BdbA5bBcFE8a9",
    "0x37CCFb45350396ada0730a31Db076075f0303868",
    "0x6ABa2eBE3857Ce0309ccD88503f7931415068956",
    2
  ],
  "numDeployments": 2,
  "solcInputHash": "9a9dc09debf1102a36cebbfb6dbf5f37",
  "metadata": "{\"compiler\":{\"version\":\"0.8.9+commit.e5eed63a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_priceFeed\",\"type\":\"address\"},{\"internalType\":\"contract Creators\",\"name\":\"_creatorsContract\",\"type\":\"address\"},{\"internalType\":\"contract Subscriptions\",\"name\":\"_subscriptionsContract\",\"type\":\"address\"},{\"internalType\":\"contract Content\",\"name\":\"_contentContract\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_version\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"Main__NotEnoughtRights\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Main__NotOwner\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Main__creatorNotFound\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentID\",\"type\":\"uint256\"}],\"name\":\"contentAdded\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"contentDeleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"contentID\",\"type\":\"uint256\"}],\"name\":\"contentUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[],\"name\":\"contractWithdrawEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"creatorDetetion\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"creatorRegistration\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"creatorRetrieve\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"_avatar\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_subscriptionPrice\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"creatorUpdate\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"creatorWithdrawEvent\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"followerAddress\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creatorAddress\",\"type\":\"address\"}],\"name\":\"subscriptionBought\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_contentType\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"addContent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"}],\"name\":\"buySubscription\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractFee\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"contractWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"creatorWithdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contentID\",\"type\":\"uint256\"}],\"name\":\"deleteContent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"deleteCreator\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"}],\"name\":\"findCreatorDataByAdress\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contentID\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"}],\"name\":\"getContent\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"}],\"name\":\"getContractBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"}],\"name\":\"getCreatorBalance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_startIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_limit\",\"type\":\"uint256\"}],\"name\":\"getCreatorsIDs\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_follower\",\"type\":\"address\"}],\"name\":\"getFollowerSubscriptions\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getPriceLevel\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_follower\",\"type\":\"address\"}],\"name\":\"getSubscriptionByCreatorAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_creatorAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_followerAddress\",\"type\":\"address\"}],\"name\":\"getSubscriptionContent\",\"outputs\":[{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"usd\",\"type\":\"uint256\"}],\"name\":\"getUSDPriceInCoins\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avatar\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_subscriptionPrice\",\"type\":\"uint256\"}],\"name\":\"registerAsCreator\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"retrieveCreator\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_contentID\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_contentType\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"_link\",\"type\":\"string\"}],\"name\":\"updateContent\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_description\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_avatar\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"_subscriptionPrice\",\"type\":\"uint256\"}],\"name\":\"updateCreator\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/Main.sol\":\"Main\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":1},\"remappings\":[]},\"sources\":{\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\ninterface AggregatorV3Interface {\\n  function decimals() external view returns (uint8);\\n\\n  function description() external view returns (string memory);\\n\\n  function version() external view returns (uint256);\\n\\n  // getRoundData and latestRoundData should both raise \\\"No data present\\\"\\n  // if they do not have data to report, instead of returning unset values\\n  // which could be misinterpreted as actual reported values.\\n  function getRoundData(uint80 _roundId)\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n\\n  function latestRoundData()\\n    external\\n    view\\n    returns (\\n      uint80 roundId,\\n      int256 answer,\\n      uint256 startedAt,\\n      uint256 updatedAt,\\n      uint80 answeredInRound\\n    );\\n}\\n\",\"keccak256\":\"0xf2b6c9adb3552254df1445b73563cf014434ff5e78663e9b961b6c059506ceb5\",\"license\":\"MIT\"},\"contracts/Content.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"./Creators.sol\\\";\\nimport \\\"./Subscriptions.sol\\\";\\nimport \\\"./Signature.sol\\\";\\n\\nerror Content__notOwner();\\nerror Content__creatorNotFound();\\nerror Content__subscriptionIsNotActive();\\nerror Content__notFound();\\nerror Content__notExist();\\nerror Content__contentTypeNotExist();\\nerror Content__notMainContract();\\n\\ncontract Content {\\n\\n\\n    struct ContentSt {\\n        string name;\\n        string description;\\n        uint256 contentType;\\n        string link;\\n        address creatorAddress;\\n    }\\n\\n    ContentSt[] private content;\\n    \\n    Creators private creators_ref;\\n    Subscriptions private subscriptions_ref;\\n\\n    address immutable owner;\\n    uint256 immutable version;\\n    address private mainContract;\\n\\n    constructor(Creators _creatorsContract, Subscriptions _subscriptionsContract, uint256 _version) {\\n        creators_ref = _creatorsContract;\\n        subscriptions_ref = _subscriptionsContract;\\n        owner = msg.sender; \\n        version = _version;\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != owner) revert Content__notOwner();\\n        _;\\n    }\\n\\n    modifier checkMainContract() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != mainContract) revert Content__notMainContract();\\n        _;\\n    }\\n\\n    function setMainContract(address _mainContractAddress) public payable onlyOwner{\\n        mainContract = _mainContractAddress;\\n    }\\n\\n    function getContentLength() public view checkMainContract returns(uint256){\\n        return content.length;\\n    }\\n\\n    function getSubscriptionContent(address _followerAddress, address _creatorAddress) public view returns(uint256[] memory) {\\n        if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Content__creatorNotFound();\\n        ( , , , address creatorAddress, , uint256[] memory contentIDs) = creators_ref.findCreatorDataByAdress(_creatorAddress);\\n        (, bool active) = subscriptions_ref.getSubscriptionInfo(_creatorAddress, _followerAddress); \\n        if(active && creatorAddress ==_creatorAddress){\\n            return(contentIDs);\\n        }else{\\n            revert Content__subscriptionIsNotActive();\\n        }\\n    }\\n\\n    function getContent(uint256 _contentID, bytes memory _signature, bytes32 _message) public view returns (string memory,\\n        string memory,\\n        uint256,\\n        string memory) {\\n        if (content.length == 0) revert Content__notExist();\\n        if (content.length <= _contentID) revert Content__notFound();\\n        address signer = Signature.getSignature(_message, _signature);\\n        address creatorAddress = content[_contentID].creatorAddress;\\n        bool active = false; \\n        if(signer == creatorAddress){\\n            active=true;\\n        }else{\\n            (, active) = subscriptions_ref.getSubscriptionInfo(creatorAddress, signer); \\n        }\\n\\n        if(active){\\n                    ContentSt memory contentData = content[_contentID];\\n                    return(\\n                        contentData.name,\\n                        contentData.description,\\n                        contentData.contentType,\\n                        contentData.link\\n                    );\\n        }else{\\n            revert Content__subscriptionIsNotActive();\\n        }\\n    }\\n\\n    function addContent(string memory _name, string memory _description, uint256 _contentType, string memory _link, address _creatorAddress) public payable checkMainContract{\\n        \\n       if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Content__creatorNotFound();\\n        \\n        if(_contentType != 0 && _contentType != 1){\\n            revert Content__contentTypeNotExist();\\n        }\\n        \\n        content.push(ContentSt(_name,\\n        _description,\\n        _contentType,\\n        _link,\\n        _creatorAddress\\n        ));\\n        \\n        uint256 contentID;\\n        contentID = content.length - 1;\\n\\n        creators_ref.addContentToCreator(_creatorAddress, contentID);\\n\\n    }\\n\\n    function removeContent(uint256 _contentID, address _creatorAddress) public payable checkMainContract{\\n\\n        if (content.length <= _contentID) revert Content__notFound();\\n\\n        if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Content__creatorNotFound();\\n        \\n        if (content[_contentID].creatorAddress != _creatorAddress) revert Content__creatorNotFound();\\n\\n        creators_ref.removeContentFromCreator(_creatorAddress, _contentID);\\n\\n    }\\n\\n    function updateContent(uint256 _contentID, string memory _name, string memory _description, uint256 _contentType, string memory _link, address _creatorAddress) public payable checkMainContract{\\n\\n        if (content.length <= _contentID) revert Content__notFound();\\n\\n        if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Content__creatorNotFound();\\n\\n        if (content[_contentID].creatorAddress != _creatorAddress) revert Content__creatorNotFound();\\n\\n        content[_contentID] = ContentSt(_name,\\n        _description,\\n        _contentType,\\n        _link,\\n        _creatorAddress\\n        );\\n\\n    }\\n\\n\\n\\n\\n\\n}\",\"keccak256\":\"0x43c4c101fe5a6e846ae2e979dafd2d4fbf8c6883aa4c13b0a7ada5c70b5b75b5\",\"license\":\"Unlicense\"},\"contracts/Creators.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\nimport \\\"hardhat/console.sol\\\";\\n\\nerror Creators__creatorAlreadyExists();\\nerror Creators__noCreators();\\nerror Creators__creatoreNotFound();\\nerror Creators__notMainContract();\\nerror Creators__notOwner();\\nerror Creators__contentIDalreadyConnected();\\nerror Creators__contentIDnotFound();\\nerror Creators__creatorsEnded();\\n\\ncontract Creators {\\n\\nstruct CreatorsStruct {\\n        string name;\\n        string description;\\n        string avatar;\\n        address creatorAddress;\\n        uint256 subscriptionPrice;\\n        uint256[] contentIDs;\\n        bool visible;\\n    }\\n\\nCreatorsStruct[] private creators;\\n\\n\\nmapping(address  => uint256) private creatorID;\\nmapping(uint256  => address) private contentToCreatorAddress;\\n\\n\\naddress private mainContract; \\naddress private contentContract; \\naddress immutable owner;\\nuint256 immutable version;\\n\\nconstructor(uint256 _version){\\n    owner = msg.sender;\\n    version = _version;\\n}\\n\\n\\n    modifier checkMainContract() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != mainContract) revert Creators__notMainContract();\\n        _;\\n    }\\n\\n    modifier checkMainOrCreatorContract() {\\n        // require(msg.sender == i_owner);\\n        if(msg.sender == mainContract || msg.sender == contentContract){\\n\\n        }else{\\n            revert Creators__notMainContract();\\n        }\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != owner) revert Creators__notOwner();\\n        _;\\n    }\\n\\n    function setMainContract(address _mainContractAddress) public payable onlyOwner{\\n        mainContract = _mainContractAddress;\\n    }\\n    function setContentContract(address _contentContract) public payable onlyOwner{\\n        contentContract = _contentContract;\\n    }\\n\\n    function checkCreatorExistance(address _creatorAddress) public view returns(bool){\\n            uint256 creatorid = creatorID[_creatorAddress];\\n            if(creators.length > 0){\\n                if(creatorid == 0){\\n                    if(_creatorAddress == creators[creatorid].creatorAddress){\\n                        return true;\\n                    }else{\\n                        return false;\\n                    }\\n                }else{\\n                    return true;\\n                }\\n            }else{\\n                  return false;\\n            }\\n            \\n    }\\n\\n\\n    function registerAsCreator(string memory _name, string memory _description, string memory _avatar, uint256 _subscriptionPrice, address _creatorAddress) public payable checkMainContract {\\n            if(creators.length > 0){\\n                if(creators[creatorID[_creatorAddress]].creatorAddress == _creatorAddress){\\n                    revert Creators__creatorAlreadyExists();\\n                }\\n            }\\n            uint256[] memory contentIDs;\\n                creatorID[_creatorAddress] = creators.length;\\n                creators.push(CreatorsStruct(_name,\\n                _description,\\n                _avatar,\\n                _creatorAddress,\\n                _subscriptionPrice,\\n                contentIDs,\\n                true\\n                ));\\n    }\\n\\n    function updateCreator(string memory _name, string memory _description, string memory _avatar, uint256 _subscriptionPrice, address _creatorAddress) public payable checkMainContract {\\n            if(checkCreatorExistance(_creatorAddress)){\\n\\n            uint256 creatorid = creatorID[_creatorAddress];\\n            uint256[] memory contentIDs = creators[creatorid].contentIDs;\\n            bool visible = creators[creatorid].visible;\\n\\n            creators[creatorid] = CreatorsStruct(\\n                _name,\\n                _description,\\n                _avatar,\\n                _creatorAddress,\\n                _subscriptionPrice,\\n                contentIDs,\\n                visible\\n            );\\n\\n            }else{\\n                revert Creators__creatoreNotFound();\\n            }\\n            \\n    }\\n\\n    function changeCreatorVisibility(bool _visible, address _creatorAddress) public payable checkMainContract {\\n            if(checkCreatorExistance(_creatorAddress)){\\n                uint256 creatorid = creatorID[_creatorAddress];\\n                creators[creatorid].visible = _visible;\\n            }else{\\n                revert Creators__creatoreNotFound();\\n            }\\n            \\n    }\\n\\n    function findCreatorIDByAdress(address _creatorAddress) public view returns (uint256){\\n        if(checkCreatorExistance(_creatorAddress)){\\n\\n        uint256 creatorid = creatorID[_creatorAddress];\\n        return creatorid;\\n          }else{\\n            revert Creators__creatoreNotFound();\\n        }\\n\\n        \\n    }\\n\\n    function findCreatorDataByAdress(address _creatorAddress) public view returns \\n        (string memory,\\n        string memory,\\n        string memory,\\n        address,\\n        uint256,\\n        uint256[] memory){\\n        if(checkCreatorExistance(_creatorAddress)){\\n        uint256 creatorid = creatorID[_creatorAddress];\\n        if(creators[creatorid].visible){\\n            return (creators[creatorid].name, \\n                    creators[creatorid].description, \\n                    creators[creatorid].avatar, \\n                    creators[creatorid].creatorAddress, \\n                    creators[creatorid].subscriptionPrice, \\n                    creators[creatorid].contentIDs);\\n            }\\n        }\\n        revert Creators__creatoreNotFound();\\n    }\\n\\n\\n    function getCreatorsIDs(uint256 _startIndex, uint256 _limit) public view returns \\n        (address[] memory, uint256, uint256){\\n        if(_startIndex >= creators.length) revert Creators__creatorsEnded();\\n        uint256 count = creators.length - _startIndex;\\n        if(_limit > count && count > 20){\\n            _limit = 20;\\n        }else if(_limit > count && count < 20){\\n            _limit = count;\\n        }else if (_limit > 20){\\n             _limit = 20;\\n        } \\n        address[] memory _indexes  = new address[](_limit);\\n        uint256 n = 0;\\n        uint256 nextIndex;\\n        for(uint256 i=_startIndex; i<(_startIndex+_limit); i++){\\n            if(i<creators.length){\\n                if(creators[i].visible && n<_indexes.length){\\n                    _indexes[n] = creators[i].creatorAddress;\\n                    n ++;\\n                }else if(n==_indexes.length){\\n                    break;\\n                }else{\\n                    _limit++;\\n                }\\n            }\\n            if(i == _startIndex+_limit-1){\\n                nextIndex = i+1;\\n                if(i+1 >= creators.length){\\n                    count = 0;\\n                }else{\\n                    count = creators.length-i-1;\\n                }\\n            }\\n        }\\n\\n        return(_indexes, count, nextIndex);\\n\\n    }\\n\\n    function addContentToCreator (address _creatorAddress, uint256 _contentID) public payable checkMainOrCreatorContract {\\n        if(checkCreatorExistance(_creatorAddress)){\\n            if(contentToCreatorAddress[_contentID] == 0x0000000000000000000000000000000000000000){\\n            uint256 creatorid = creatorID[_creatorAddress];\\n            creators[creatorid].contentIDs.push(_contentID);\\n            contentToCreatorAddress[_contentID] = _creatorAddress;\\n            }else{\\n                revert Creators__contentIDalreadyConnected();\\n            }\\n        }else{\\n            revert Creators__creatoreNotFound();\\n        }\\n\\n    }\\n\\n    function removeContentFromCreator (address _creatorAddress, uint256 _contentID) public payable checkMainOrCreatorContract {\\n        if(checkCreatorExistance(_creatorAddress)){\\n            if(contentToCreatorAddress[_contentID] != 0x0000000000000000000000000000000000000000){\\n                uint256 creatorid = creatorID[_creatorAddress];\\n                uint256[] memory contentIDs = creators[creatorid].contentIDs;\\n                uint256 contentIDinArray=contentIDs.length;\\n                for(uint256 i=0; i<contentIDs.length; i++){\\n                    if(contentIDs[i] == _contentID){\\n                        contentIDinArray = i; \\n                    }\\n                    if (i >= contentIDinArray && i != (contentIDs.length-1)){\\n                        contentIDs[i] = contentIDs[i+1];\\n                    }\\n                }\\n                creators[creatorid].contentIDs = contentIDs;\\n                creators[creatorid].contentIDs.pop();\\n\\n            }else{\\n                revert Creators__contentIDnotFound();\\n            }\\n        }else{\\n            revert Creators__creatoreNotFound();\\n        }\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0x5c3eb986203bfe09c1e04d924448cef7d666aa74bd1eec924da1a4b19279b6f7\",\"license\":\"MIT\"},\"contracts/Main.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\nimport \\\"hardhat/console.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\nimport \\\"./Creators.sol\\\";\\nimport \\\"./Subscriptions.sol\\\";\\nimport \\\"./Content.sol\\\";\\nimport \\\"./Signature.sol\\\";\\n\\nerror Main__NotOwner();\\nerror Main__creatorNotFound();\\nerror Main__NotEnoughtRights();\\n\\ncontract Main {\\n\\nuint256 private balance; \\nuint256 public immutable contractFee;\\naddress private immutable owner;\\nuint256 immutable version;\\n\\nAggregatorV3Interface private s_priceFeed;\\nCreators private creators_ref;\\nSubscriptions private subscriptions_ref;\\nContent private content_ref;\\n\\nmapping(address  => uint256) private creatorBalance;\\n\\n\\nevent creatorRegistration(address indexed creatorAddress);\\nevent creatorUpdate(string _name, string _description, string _avatar, uint256 _subscriptionPrice, address indexed creatorAddress);\\nevent creatorDetetion(address indexed creatorAddress);\\nevent creatorRetrieve(address indexed creatorAddress);\\nevent contentAdded(uint256 indexed contentID);\\nevent contentDeleted();\\nevent contentUpdated(uint256 indexed contentID);\\nevent subscriptionBought(address indexed followerAddress, address indexed creatorAddress);\\nevent contractWithdrawEvent();\\nevent creatorWithdrawEvent(address indexed creatorAddress);\\n\\nconstructor(address _priceFeed, Creators _creatorsContract, Subscriptions _subscriptionsContract, Content _contentContract, uint256 _version) {\\n        creators_ref = _creatorsContract;\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        subscriptions_ref = _subscriptionsContract;\\n        content_ref = _contentContract;\\n        owner = msg.sender;\\n        contractFee = 20;\\n        balance = 0;\\n        version = _version;\\n    }\\n\\nmodifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != owner) revert Main__NotOwner();\\n        _;\\n    }\\n\\nfunction registerAsCreator(string memory _name, string memory _description, string memory _avatar, uint256 _subscriptionPrice) public payable {\\n            creators_ref.registerAsCreator(_name, _description, _avatar, _subscriptionPrice, msg.sender);\\n            creatorBalance[msg.sender] = 0;\\n            emit creatorRegistration(msg.sender);\\n        \\n    }\\n\\nfunction updateCreator(string memory _name, string memory _description, string memory _avatar, uint256 _subscriptionPrice) public payable {\\n            if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n            creators_ref.updateCreator(_name, _description, _avatar, _subscriptionPrice, msg.sender);\\n            emit creatorUpdate(_name, _description, _avatar, _subscriptionPrice, msg.sender);\\n    }\\n\\nfunction deleteCreator() public payable {\\n            if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n            creators_ref.changeCreatorVisibility(false, msg.sender);  \\n            emit creatorDetetion(msg.sender);\\n    }\\n\\nfunction retrieveCreator() public payable {\\n            if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n            creators_ref.changeCreatorVisibility(true, msg.sender);  \\n            emit creatorRetrieve(msg.sender);\\n    }\\n\\nfunction findCreatorDataByAdress(address _creatorAddress) public view returns \\n        (string memory,\\n        string memory,\\n        string memory,\\n        address,\\n        uint256,\\n        uint256[] memory){\\n        if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Main__creatorNotFound();\\n        (string memory name, string memory description, string memory avatar, address creatorAddress, uint256 subscriptionPrice, uint256[] memory contentIDs) = creators_ref.findCreatorDataByAdress(_creatorAddress);\\n        return(name, \\n                description, \\n                avatar, \\n                creatorAddress, \\n                subscriptionPrice, \\n                contentIDs);\\n    }\\n\\nfunction getCreatorsIDs(uint256 _startIndex, uint256 _limit) public view returns \\n        (address[] memory, uint256, uint256){\\n        (address[] memory indexes, uint256 count, uint256 nextIndex) = creators_ref.getCreatorsIDs(_startIndex, _limit);\\n        return(indexes, count, nextIndex);\\n\\n    }\\n\\n\\nfunction addContent(string memory _name, string memory _description, uint256 _contentType, string memory _link) public payable {\\n        if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n        content_ref.addContent(_name, _description, _contentType, _link, msg.sender);\\n        uint256 contentID = content_ref.getContentLength();\\n        contentID --;\\n        emit contentAdded(contentID);\\n    }\\n\\nfunction deleteContent(uint256 _contentID) public payable {\\n        if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n        content_ref.removeContent(_contentID, msg.sender);\\n        emit contentDeleted();\\n    }\\n\\nfunction updateContent(uint256 _contentID, string memory _name, string memory _description, uint256 _contentType, string memory _link) public payable {\\n        if (!creators_ref.checkCreatorExistance(msg.sender)) revert Main__creatorNotFound();\\n        content_ref.updateContent(_contentID, _name, _description, _contentType, _link, msg.sender);\\n        emit contentUpdated(_contentID);\\n    }\\n\\nfunction buySubscription(address _creatorAddress) public payable{\\n    if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Main__creatorNotFound();\\n    subscriptions_ref.buySubscription( _creatorAddress,  msg.sender,  msg.value);\\n    uint256 balanceIncrease = msg.value / contractFee;\\n    uint256 creatorBalanceIncrease = msg.value - balanceIncrease;\\n    creatorBalance[_creatorAddress] += creatorBalanceIncrease;\\n    balance += balanceIncrease;\\n    emit subscriptionBought(msg.sender, _creatorAddress);\\n}\\n\\nfunction getFollowerSubscriptions(address _follower) public view returns(address[] memory){\\n    address[] memory _followerSubscriptions = subscriptions_ref.getFollowerSubscriptions(_follower); \\n    return _followerSubscriptions;\\n    \\n}\\n\\n\\nfunction getSubscriptionByCreatorAddress(address _creator, address _follower) public view  returns(address, address, uint, bool){\\n        (uint256 subscriptionEnd, bool active) = subscriptions_ref.getSubscriptionInfo(_creator, _follower);\\n\\n                return (_creator, \\n                    _follower, \\n                    subscriptionEnd, \\n                    active);\\n\\n    }\\n\\n    function getContent(uint256 _contentID, bytes memory _signature, bytes32 _message) public view returns (string memory,\\n        string memory,\\n        uint256,\\n        string memory) {\\n\\n        (string memory name, string memory description, uint256 contentType, string memory link) = content_ref.getContent(_contentID, _signature, _message);\\n        return(\\n                        name,\\n                        description,\\n                        contentType,\\n                        link\\n                    );\\n\\n\\n    }\\n\\n    function getSubscriptionContent(address _creatorAddress, address _followerAddress) public view returns(uint256[] memory) {\\n       uint256[] memory contentIDs = content_ref.getSubscriptionContent( _followerAddress, _creatorAddress);\\n        return(contentIDs);\\n\\n    }\\n\\n    function getContractBalance(bytes memory _signature, bytes32 _message) public view returns(uint256){\\n\\n        require(_signature.length == 65, \\\"invalid signature length\\\");\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            assembly {\\n            r := mload(add(_signature, 32))\\n            s := mload(add(_signature, 64))\\n            v := byte(0, mload(add(_signature, 96)))\\n            }\\n            address signer = ecrecover(_message, v, r, s);\\n        if(signer == owner){\\n            return balance;\\n        }else{\\n            revert Main__NotOwner();\\n        }\\n\\n    }\\n\\n    function getCreatorBalance(bytes memory _signature, bytes32 _message) public view returns(uint256){\\n\\n        address signer = Signature.getSignature(_message, _signature);\\n        ( , , , address creatorAddress, ,) = creators_ref.findCreatorDataByAdress(signer);\\n        if(creatorAddress == signer){\\n            return creatorBalance[signer];\\n        }else{\\n            revert Main__NotEnoughtRights();\\n        }\\n\\n    }\\n\\n    function contractWithdraw() public payable onlyOwner{\\n\\n        (bool success, ) = owner.call{value: balance}(\\\"\\\");\\n        require(success);\\n        emit contractWithdrawEvent();\\n    }\\n\\n    function creatorWithdraw() public payable {\\n\\n        address creatorAddress = msg.sender;\\n        (bool success, ) = creatorAddress.call{value: creatorBalance[creatorAddress]}(\\\"\\\");\\n        require(success);\\n        creatorBalance[creatorAddress] = 0;\\n        emit creatorWithdrawEvent(msg.sender);\\n\\n    }\\n\\n    function getPriceLevel() public view returns (uint256){\\n\\n        return PriceConverter.getPrice(s_priceFeed);\\n    }\\n\\n    function getUSDPriceInCoins(uint256 usd) public view returns (uint256){\\n\\n        return PriceConverter.getUSDPriceInCoins(s_priceFeed, usd);\\n    }\\n\\n}\\n\",\"keccak256\":\"0xc2ae36ffb1bac8a91c5eb16d2aa0c835a4ecf1fed6f749416102b7ed3ef16792\",\"license\":\"Unlicense\"},\"contracts/PriceConverter.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.0;\\n\\nimport \\\"@chainlink/contracts/src/v0.8/interfaces/AggregatorV3Interface.sol\\\";\\n\\nlibrary PriceConverter {\\n  function getPrice(AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    (, int256 answer, , , ) = priceFeed.latestRoundData();\\n    // ETH/USD rate in 18 digit\\n    return uint256(answer * 10000000000);\\n  }\\n\\n  // 1000000000\\n  // call it get fiatConversionRate, since it assumes something about decimals\\n  // It wouldn't work for every aggregator\\n  function getConversionRate(uint256 ethAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 ethAmountInUsd = (ethPrice * ethAmount) / 1000000000000000000;\\n    // the actual ETH/USD conversation rate, after adjusting the extra 0s.\\n    return ethAmountInUsd;\\n  }\\n\\n  function getConversionRateUSDtoCoins(uint256 usdAmount, AggregatorV3Interface priceFeed)\\n    internal\\n    view\\n    returns (uint256)\\n  {\\n    uint256 ethPrice = getPrice(priceFeed);\\n    uint256 UsdAmountInCoins = (usdAmount / ethPrice);\\n    return UsdAmountInCoins;\\n  }\\n\\n  function getUSDPriceInCoins(AggregatorV3Interface priceFeed, uint256 usd) internal view returns (uint256){\\n\\n        uint256 priceInCoins = 1000000000000000000 * 1000000000000000000 * usd / getPrice(priceFeed); \\n\\n        return priceInCoins;\\n    }\\n}\",\"keccak256\":\"0x0a3329a12dce006633e8cb87a41456baee6932c063bcc465a4d6bb23fcdc5bc7\",\"license\":\"MIT\"},\"contracts/Signature.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity ^0.8.9;\\n\\n\\nlibrary Signature {\\n\\n\\n    function getSignature(bytes32  _phrase, bytes memory _signature) \\n    internal \\n    pure \\n    returns (address){\\n\\n        require(_signature.length == 65, \\\"invalid signature length\\\");\\n            bytes32 r;\\n            bytes32 s;\\n            uint8 v;\\n            assembly {\\n            r := mload(add(_signature, 32))\\n            s := mload(add(_signature, 64))\\n            v := byte(0, mload(add(_signature, 96)))\\n            }\\n            address signer = ecrecover(_phrase, v, r, s);\\n            return signer;\\n\\n    }\\n\\n\\n}\",\"keccak256\":\"0xc2d188631463c62d57847cdf17d5c9c5bd4b491bd088ccbdedab3b344a1b6e98\",\"license\":\"MIT\"},\"contracts/Subscriptions.sol\":{\"content\":\"//SPDX-License-Identifier: Unlicense\\npragma solidity ^0.8.9;\\n\\nimport \\\"./Creators.sol\\\";\\nimport \\\"./PriceConverter.sol\\\";\\n\\nerror Subscriptions__noSubscriptions();\\nerror Subscriptions__notFound();\\nerror Subscriptions__notOwner();\\nerror Subscriptions__notMainContract();\\nerror Subscriptions__notEnoughMoneySent();\\nerror Subscriptions__creatorNotFound();\\n\\ncontract Subscriptions {\\n\\n    struct SubscriptionsStruct {\\n            uint256 subscriptionEnd;\\n            address creator;\\n            address follower;\\n        }\\n\\n    SubscriptionsStruct[] private subscriptions;\\n\\n    AggregatorV3Interface private s_priceFeed;\\n    Creators private creators_ref;\\n    address immutable owner;\\n    uint256 immutable version;\\n    address private mainContract;\\n\\n    mapping(address  => mapping(address  => uint256)) private subscriptionID;\\n    mapping(address  => address[]) private followerSubscriptions;\\n\\n\\n\\n    constructor(address _priceFeed, Creators _creatorsContract, uint256 _version) {\\n        creators_ref = _creatorsContract;\\n        s_priceFeed = AggregatorV3Interface(_priceFeed);\\n        owner = msg.sender;\\n        version = _version;\\n    }\\n\\n\\n    modifier subscriptionsExist() {\\n        // require(msg.sender == i_owner);\\n        if (subscriptions.length == 0) revert Subscriptions__noSubscriptions();\\n        _;\\n    }\\n\\n    modifier checkMainContract() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != mainContract) revert Subscriptions__notMainContract();\\n        _;\\n    }\\n\\n    modifier onlyOwner() {\\n        // require(msg.sender == i_owner);\\n        if (msg.sender != owner) revert Subscriptions__notOwner();\\n        _;\\n    }\\n\\n    function setMainContract(address _mainContractAddress) public payable onlyOwner{\\n        mainContract = _mainContractAddress;\\n    }\\n\\n    function getSubscriptionInfo(address _creatorAddress, address _followerAddress) public view subscriptionsExist returns(uint256, bool){\\n        uint256 subscriptionid = subscriptionID[_creatorAddress][_followerAddress];\\n        if(subscriptionid == 0 && (subscriptions[subscriptionid].creator != _creatorAddress || subscriptions[subscriptionid].follower != _followerAddress)){\\n            revert Subscriptions__notFound();\\n        }\\n        bool active = false;\\n        if(subscriptions[subscriptionid].subscriptionEnd > block.timestamp) active = true;\\n        return( subscriptions[subscriptionid].subscriptionEnd,  active);\\n    }\\n\\n    function buySubscription(address _creatorAddress, address _followerAddress, uint256 valueSent) public payable checkMainContract {\\n        if (!creators_ref.checkCreatorExistance(_creatorAddress)) revert Subscriptions__creatorNotFound();\\n        ( , , , ,uint256 creatorSubscriptioPrice, )= creators_ref.findCreatorDataByAdress(_creatorAddress);\\n        uint256 priceInCoins = PriceConverter.getUSDPriceInCoins(s_priceFeed, creatorSubscriptioPrice);\\n        if (valueSent < priceInCoins) revert Subscriptions__notEnoughMoneySent();\\n        uint256 subscriptionTime = 30*24*60*60;\\n        if(valueSent > priceInCoins){\\n            subscriptionTime = (subscriptionTime*valueSent)/(priceInCoins);\\n        }\\n        uint256 subscriptionEndTime = block.timestamp + subscriptionTime;\\n\\n        uint256 subscriptionid = subscriptionID[_creatorAddress][_followerAddress];\\n\\n        bool pushSubscription = false;\\n\\n        if(subscriptions.length > 0){\\n            if(subscriptions[subscriptionid].creator == _creatorAddress && subscriptions[subscriptionid].follower == _followerAddress){\\n                if(subscriptions[subscriptionid].subscriptionEnd > block.timestamp){\\n                    subscriptionEndTime = subscriptions[subscriptionid].subscriptionEnd + subscriptionTime;\\n                }\\n                subscriptions[subscriptionid].subscriptionEnd = subscriptionEndTime;\\n            }else{\\n                pushSubscription = true;\\n            }\\n        }else{\\n            pushSubscription = true;\\n        }\\n\\n        if(pushSubscription = true){\\n            subscriptions.push(SubscriptionsStruct(subscriptionEndTime,\\n            _creatorAddress,\\n            _followerAddress\\n            ));\\n\\n            subscriptionID[_creatorAddress][_followerAddress] = subscriptions.length - 1;\\n            followerSubscriptions[_followerAddress].push(_creatorAddress); \\n        }\\n        \\n    }\\n\\n    function getFollowerSubscriptions(address _follower) public view returns(address[] memory){\\n    address[] memory _followerSubscriptions = followerSubscriptions[_follower]; \\n    return _followerSubscriptions;\\n    }\\n\\n}\",\"keccak256\":\"0x2ed43fadf01bff366169325cd8e07b96599b8e0f83e76a80b9c4f07cb2797d7e\",\"license\":\"Unlicense\"},\"hardhat/console.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\npragma solidity >= 0.4.22 <0.9.0;\\n\\nlibrary console {\\n\\taddress constant CONSOLE_ADDRESS = address(0x000000000000000000636F6e736F6c652e6c6f67);\\n\\n\\tfunction _sendLogPayload(bytes memory payload) private view {\\n\\t\\tuint256 payloadLength = payload.length;\\n\\t\\taddress consoleAddress = CONSOLE_ADDRESS;\\n\\t\\tassembly {\\n\\t\\t\\tlet payloadStart := add(payload, 32)\\n\\t\\t\\tlet r := staticcall(gas(), consoleAddress, payloadStart, payloadLength, 0, 0)\\n\\t\\t}\\n\\t}\\n\\n\\tfunction log() internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log()\\\"));\\n\\t}\\n\\n\\tfunction logInt(int p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(int)\\\", p0));\\n\\t}\\n\\n\\tfunction logUint(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction logString(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction logBool(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction logAddress(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes(bytes memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes1(bytes1 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes1)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes2(bytes2 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes2)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes3(bytes3 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes3)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes4(bytes4 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes4)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes5(bytes5 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes5)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes6(bytes6 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes6)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes7(bytes7 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes7)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes8(bytes8 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes8)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes9(bytes9 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes9)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes10(bytes10 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes10)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes11(bytes11 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes11)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes12(bytes12 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes12)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes13(bytes13 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes13)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes14(bytes14 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes14)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes15(bytes15 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes15)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes16(bytes16 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes16)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes17(bytes17 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes17)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes18(bytes18 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes18)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes19(bytes19 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes19)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes20(bytes20 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes20)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes21(bytes21 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes21)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes22(bytes22 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes22)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes23(bytes23 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes23)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes24(bytes24 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes24)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes25(bytes25 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes25)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes26(bytes26 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes26)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes27(bytes27 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes27)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes28(bytes28 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes28)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes29(bytes29 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes29)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes30(bytes30 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes30)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes31(bytes31 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes31)\\\", p0));\\n\\t}\\n\\n\\tfunction logBytes32(bytes32 p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bytes32)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint)\\\", p0));\\n\\t}\\n\\n\\tfunction log(string memory p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string)\\\", p0));\\n\\t}\\n\\n\\tfunction log(bool p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool)\\\", p0));\\n\\t}\\n\\n\\tfunction log(address p0) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address)\\\", p0));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(address p0, address p1) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address)\\\", p0, p1));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address)\\\", p0, p1, p2));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(uint p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(uint,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(string memory p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(string,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(bool p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(bool,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, uint p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,uint,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, string memory p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,string,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, bool p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,bool,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, uint p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,uint,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, string memory p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,string,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, bool p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,bool,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, uint p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,uint)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, string memory p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,string)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, bool p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,bool)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n\\tfunction log(address p0, address p1, address p2, address p3) internal view {\\n\\t\\t_sendLogPayload(abi.encodeWithSignature(\\\"log(address,address,address,address)\\\", p0, p1, p2, p3));\\n\\t}\\n\\n}\\n\",\"keccak256\":\"0x72b6a1d297cd3b033d7c2e4a7e7864934bb767db6453623f1c3082c6534547f4\",\"license\":\"MIT\"}},\"version\":1}",
  "bytecode": "0x60e06040523480156200001157600080fd5b50604051620025f7380380620025f78339810160408190526200003491620000b2565b600280546001600160a01b03199081166001600160a01b03968716179091556001805482169686169690961790955560038054861693851693909317909255600480549094169216919091179091553360a05260146080526000805560c05262000126565b6001600160a01b0381168114620000af57600080fd5b50565b600080600080600060a08688031215620000cb57600080fd5b8551620000d88162000099565b6020870151909550620000eb8162000099565b6040870151909450620000fe8162000099565b6060870151909350620001118162000099565b80925050608086015190509295509295909350565b60805160a05160c05161248f620001686000396000505060008181610a8801528181610ad70152610cac0152600081816103060152611379015261248f6000f3fe6080604052600436106100f95760003560e01c80621da492146100fe57806312e0dc2e146101135780631b1723f31461014c5780631c0307031461015f5780631d8f3455146101825780632598125e1461018a57806341013fec146101b757806342cd54b3146101ca57806347fc43061461021757806364ec8bdb1461021f578063697e0f6314610227578063802cfba91461024757806383ce57b3146102795780639af020ca146102815780639c9b02b3146102a1578063a988daab146102b4578063aa556f0a146102e1578063d41977cd146102f4578063e884005014610328578063fb62cba214610357578063fed216cb14610377575b600080fd5b61011161010c36600461182f565b61038a565b005b34801561011f57600080fd5b5061013361012e3660046118c0565b610559565b604051610143949392919061196b565b60405180910390f35b61011161015a3660046119b5565b610605565b34801561016b57600080fd5b50610174610758565b604051908152602001610143565b610111610775565b34801561019657600080fd5b506101aa6101a5366004611a5c565b6108a3565b6040516101439190611abd565b6101116101c53660046119b5565b610934565b3480156101d657600080fd5b506101ea6101e5366004611ad0565b6109de565b604080516001600160a01b0395861681529490931660208501529183015215156060820152608001610143565b610111610a7d565b610111610b70565b34801561023357600080fd5b50610174610242366004611b09565b610c17565b34801561025357600080fd5b50610267610262366004611a5c565b610d11565b60405161014396959493929190611b7d565b610111610e86565b34801561028d57600080fd5b5061017461029c366004611b09565b610fb3565b6101116102af366004611bed565b6110a4565b3480156102c057600080fd5b506102d46102cf366004611ad0565b6111dd565b6040516101439190611c88565b6101116102ef366004611a5c565b61126e565b34801561030057600080fd5b506101747f000000000000000000000000000000000000000000000000000000000000000081565b34801561033457600080fd5b50610348610343366004611c9b565b611436565b60405161014393929190611cbd565b34801561036357600080fd5b50610174610372366004611ce2565b6114dc565b610111610385366004611ce2565b6114f5565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906103b9903390600401611cfb565b60206040518083038186803b1580156103d157600080fd5b505afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190611d24565b6104265760405163b497730b60e01b815260040160405180910390fd5b6004805460405163e2b4e9d760e01b81526001600160a01b039091169163e2b4e9d79161045d918891889188918891339101611d3f565b600060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506000600460009054906101000a90046001600160a01b03166001600160a01b03166355081c9b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190611d99565b90508061052381611dc8565b6040519092508291507f33b6e53ee793e8e84617722a3a50d47a8e7d2fc6c8a9363618477275eae1932b90600090a25050505050565b600480546040516309706e1760e11b81526060928392600092849284928392839283926001600160a01b0316916312e0dc2e9161059c918f918f918f9101611ddf565b60006040518083038186803b1580156105b457600080fd5b505afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190611e4d565b929e919d509b50909950975050505050505050565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890610634903390600401611cfb565b60206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190611d24565b6106a15760405163b497730b60e01b815260040160405180910390fd5b600254604051631eccd7cf60e31b81526001600160a01b039091169063f666be78906106d99087908790879087903390600401611ed2565b600060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b50505050336001600160a01b03167f3d07b9f1f975d610aea6ae2fcd07dfba86fadf3caeb47461d5d40c2abf86947c8585858560405161074a9493929190611f2e565b60405180910390a250505050565b600154600090610770906001600160a01b031661161f565b905090565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906107a4903390600401611cfb565b60206040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190611d24565b6108115760405163b497730b60e01b815260040160405180910390fd5b6002546040516319edd2f160e31b81526001600160a01b039091169063cf6e978890610844906000903390600401611f79565b600060405180830381600087803b15801561085e57600080fd5b505af1158015610872573d6000803e3d6000fd5b50506040513392507f32fb7661fd058308b00ede495bce1be038170313f49a5f00924aed9f39aef6319150600090a2565b6003546040516312cc092f60e11b81526060916000916001600160a01b0390911690632598125e906108d9908690600401611cfb565b60006040518083038186803b1580156108f157600080fd5b505afa158015610905573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092d919081019061202f565b9392505050565b6002546040516315b911ed60e01b81526001600160a01b03909116906315b911ed9061096c9087908790879087903390600401611ed2565b600060405180830381600087803b15801561098657600080fd5b505af115801561099a573d6000803e3d6000fd5b505033600081815260056020526040808220829055519193507f2cd59e760e4c4d106d987981bf61165f35055aa77cd80014aa1b0b865b79a8e7925090a250505050565b6003546040516397aaf41560e01b8152600091829182918291829182916001600160a01b03909116906397aaf41590610a1d908b908b90600401612063565b604080518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c919061207d565b989997989097909650945050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ac65760405163295c73e760e21b815260040160405180910390fd5b600080546040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691908381818185875af1925050503d8060008114610b31576040519150601f19603f3d011682016040523d82523d6000602084013e610b36565b606091505b5050905080610b4457600080fd5b6040517f7e64e73c171e8ef4ba5ab41df4e022dfe19c81ed5ad3d60831f775de5082afab90600090a150565b336000818152600560205260408082205490518391908381818185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5050905080610bd157600080fd5b6001600160a01b0382166000908152600560205260408082208290555133917f6d6d323e74699f5bbd9e290e4b14e53cfca81320035110f96ae1e656cd21ea6291a25050565b60008251604114610c435760405162461bcd60e51b8152600401610c3a906120a9565b60405180910390fd5b60208381015160408086015160608701518251600080825295019283905292939092811a91600190610c7c9088908590889088906120db565b6020604051602081039080840390855afa158015610c9e573d6000803e3d6000fd5b5050506020604051035190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415610cf257600054945050505050610d0b565b60405163295c73e760e21b815260040160405180910390fd5b92915050565b60025460405162d9937f60e31b815260609182918291600091829184916001600160a01b03909116906306cc9bf890610d4e908a90600401611cfb565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e9190611d24565b610dbb5760405163b497730b60e01b815260040160405180910390fd5b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b031663802cfba98e6040518263ffffffff1660e01b8152600401610e059190611cfb565b60006040518083038186803b158015610e1d57600080fd5b505afa158015610e31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e599190810190612154565b9550955095509550955095508585858585859b509b509b509b509b509b5050505050505091939550919395565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890610eb5903390600401611cfb565b60206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190611d24565b610f225760405163b497730b60e01b815260040160405180910390fd5b6002546040516319edd2f160e31b81526001600160a01b039091169063cf6e978890610f55906001903390600401611f79565b600060405180830381600087803b158015610f6f57600080fd5b505af1158015610f83573d6000803e3d6000fd5b50506040513392507e350905414c6ed448b7b0072755e0fe1a3205836aab10bf105c33b29130eae39150600090a2565b600080610fc083856116aa565b60025460405163802cfba960e01b81529192506000916001600160a01b039091169063802cfba990610ff6908590600401611cfb565b60006040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104a9190810190612154565b50509350505050816001600160a01b0316816001600160a01b0316141561108b57506001600160a01b03166000908152600560205260409020549050610d0b565b60405163282db49760e21b815260040160405180910390fd5b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906110d3903390600401611cfb565b60206040518083038186803b1580156110eb57600080fd5b505afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111239190611d24565b6111405760405163b497730b60e01b815260040160405180910390fd5b600480546040516396e4d3cf60e01b81526001600160a01b03909116916396e4d3cf916111799189918991899189918991339101612219565b600060405180830381600087803b15801561119357600080fd5b505af11580156111a7573d6000803e3d6000fd5b50506040518792507fbe2e2bf5fc0a98440d16b85c2165bb0a09f4c1f634bf30a3d0e87754ffa527219150600090a25050505050565b6004805460405163a988daab60e01b81526060926000926001600160a01b03169163a988daab91611212918791899101612063565b60006040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611266919081019061227a565b949350505050565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf89061129d908490600401611cfb565b60206040518083038186803b1580156112b557600080fd5b505afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed9190611d24565b61130a5760405163b497730b60e01b815260040160405180910390fd5b600354604051631b249ca160e21b81526001600160a01b03838116600483015233602483015234604483015290911690636c92728490606401600060405180830381600087803b15801561135d57600080fd5b505af1158015611371573d6000803e3d6000fd5b5050505060007f0000000000000000000000000000000000000000000000000000000000000000346113a391906122ae565b905060006113b182346122d0565b6001600160a01b0384166000908152600560205260408120805492935083929091906113de9084906122e7565b92505081905550816000808282546113f691906122e7565b90915550506040516001600160a01b0384169033907fd7a44d13a7c24c7dfe120f5b6d78d2adee4f81127d02c225d51dcf8d49070e2090600090a3505050565b600254604051630e88400560e41b8152600481018490526024810183905260609160009182918291829182916001600160a01b039091169063e88400509060440160006040518083038186803b15801561148f57600080fd5b505afa1580156114a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114cb91908101906122ff565b919750955093505050509250925092565b600154600090610d0b906001600160a01b03168361173e565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890611524903390600401611cfb565b60206040518083038186803b15801561153c57600080fd5b505afa158015611550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115749190611d24565b6115915760405163b497730b60e01b815260040160405180910390fd5b600480546040516345bce96d60e01b81529182018390523360248301526001600160a01b0316906345bce96d90604401600060405180830381600087803b1580156115db57600080fd5b505af11580156115ef573d6000803e3d6000fd5b50506040517fb9bf1aacfafccd6f4a342702950c6394ef7007c8942a5efff36d66ac4c84c2ed925060009150a150565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561165b57600080fd5b505afa15801561166f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116939190612365565b505050915050806402540be40061092d91906123b5565b600081516041146116cd5760405162461bcd60e51b8152600401610c3a906120a9565b60208281015160408085015160608601518251600080825295019283905292939092811a916001906117069089908590889088906120db565b6020604051602081039080840390855afa158015611728573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b60008061174a8461161f565b611762846a0c097ce7bc90715b34b9f160241b61243a565b61126691906122ae565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156117aa576117aa61176c565b604052919050565b60006001600160401b038211156117cb576117cb61176c565b50601f01601f191660200190565b600082601f8301126117ea57600080fd5b81356117fd6117f8826117b2565b611782565b81815284602083860101111561181257600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561184557600080fd5b84356001600160401b038082111561185c57600080fd5b611868888389016117d9565b9550602087013591508082111561187e57600080fd5b61188a888389016117d9565b94506040870135935060608701359150808211156118a757600080fd5b506118b4878288016117d9565b91505092959194509250565b6000806000606084860312156118d557600080fd5b8335925060208401356001600160401b038111156118f257600080fd5b6118fe868287016117d9565b925050604084013590509250925092565b60005b8381101561192a578181015183820152602001611912565b83811115611939576000848401525b50505050565b6000815180845261195781602086016020860161190f565b601f01601f19169290920160200192915050565b60808152600061197e608083018761193f565b8281036020840152611990818761193f565b905084604084015282810360608401526119aa818561193f565b979650505050505050565b600080600080608085870312156119cb57600080fd5b84356001600160401b03808211156119e257600080fd5b6119ee888389016117d9565b95506020870135915080821115611a0457600080fd5b611a10888389016117d9565b94506040870135915080821115611a2657600080fd5b50611a33878288016117d9565b949793965093946060013593505050565b6001600160a01b0381168114611a5957600080fd5b50565b600060208284031215611a6e57600080fd5b813561092d81611a44565b600081518084526020808501945080840160005b83811015611ab25781516001600160a01b031687529582019590820190600101611a8d565b509495945050505050565b60208152600061092d6020830184611a79565b60008060408385031215611ae357600080fd5b8235611aee81611a44565b91506020830135611afe81611a44565b809150509250929050565b60008060408385031215611b1c57600080fd5b82356001600160401b03811115611b3257600080fd5b611b3e858286016117d9565b95602094909401359450505050565b600081518084526020808501945080840160005b83811015611ab257815187529582019590820190600101611b61565b60c081526000611b9060c083018961193f565b8281036020840152611ba2818961193f565b90508281036040840152611bb6818861193f565b6001600160a01b03871660608501526080840186905283810360a08501529050611be08185611b4d565b9998505050505050505050565b600080600080600060a08688031215611c0557600080fd5b8535945060208601356001600160401b0380821115611c2357600080fd5b611c2f89838a016117d9565b95506040880135915080821115611c4557600080fd5b611c5189838a016117d9565b9450606088013593506080880135915080821115611c6e57600080fd5b50611c7b888289016117d9565b9150509295509295909350565b60208152600061092d6020830184611b4d565b60008060408385031215611cae57600080fd5b50508035926020909101359150565b606081526000611cd06060830186611a79565b60208301949094525060400152919050565b600060208284031215611cf457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80518015158114611d1f57600080fd5b919050565b600060208284031215611d3657600080fd5b61092d82611d0f565b60a081526000611d5260a083018861193f565b8281036020840152611d64818861193f565b90508560408401528281036060840152611d7e818661193f565b91505060018060a01b03831660808301529695505050505050565b600060208284031215611dab57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081611dd757611dd7611db2565b506000190190565b838152606060208201526000611df8606083018561193f565b9050826040830152949350505050565b600082601f830112611e1957600080fd5b8151611e276117f8826117b2565b818152846020838601011115611e3c57600080fd5b61126682602083016020870161190f565b60008060008060808587031215611e6357600080fd5b84516001600160401b0380821115611e7a57600080fd5b611e8688838901611e08565b95506020870151915080821115611e9c57600080fd5b611ea888838901611e08565b9450604087015193506060870151915080821115611ec557600080fd5b506118b487828801611e08565b60a081526000611ee560a083018861193f565b8281036020840152611ef7818861193f565b90508281036040840152611f0b818761193f565b606084019590955250506001600160a01b03919091166080909101529392505050565b608081526000611f41608083018761193f565b8281036020840152611f53818761193f565b90508281036040840152611f67818661193f565b91505082606083015295945050505050565b91151582526001600160a01b0316602082015260400190565b60006001600160401b03821115611fab57611fab61176c565b5060051b60200190565b8051611d1f81611a44565b600082601f830112611fd157600080fd5b81516020611fe16117f883611f92565b82815260059290921b8401810191818101908684111561200057600080fd5b8286015b8481101561202457805161201781611a44565b8352918301918301612004565b509695505050505050565b60006020828403121561204157600080fd5b81516001600160401b0381111561205757600080fd5b61126684828501611fc0565b6001600160a01b0392831681529116602082015260400190565b6000806040838503121561209057600080fd5b825191506120a060208401611d0f565b90509250929050565b6020808252601890820152770d2dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b600082601f83011261210a57600080fd5b8151602061211a6117f883611f92565b82815260059290921b8401810191818101908684111561213957600080fd5b8286015b84811015612024578051835291830191830161213d565b60008060008060008060c0878903121561216d57600080fd5b86516001600160401b038082111561218457600080fd5b6121908a838b01611e08565b975060208901519150808211156121a657600080fd5b6121b28a838b01611e08565b965060408901519150808211156121c857600080fd5b6121d48a838b01611e08565b95506121e260608a01611fb5565b94506080890151935060a08901519150808211156121ff57600080fd5b5061220c89828a016120f9565b9150509295509295509295565b86815260c06020820152600061223260c083018861193f565b8281036040840152612244818861193f565b9050856060840152828103608084015261225e818661193f565b91505060018060a01b03831660a0830152979650505050505050565b60006020828403121561228c57600080fd5b81516001600160401b038111156122a257600080fd5b611266848285016120f9565b6000826122cb57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156122e2576122e2611db2565b500390565b600082198211156122fa576122fa611db2565b500190565b60008060006060848603121561231457600080fd5b83516001600160401b0381111561232a57600080fd5b61233686828701611fc0565b93505060208401519150604084015190509250925092565b80516001600160501b0381168114611d1f57600080fd5b600080600080600060a0868803121561237d57600080fd5b6123868661234e565b94506020860151935060408601519250606086015191506123a96080870161234e565b90509295509295909350565b60006001600160ff1b03818413828413808216868404861116156123db576123db611db2565b600160ff1b60008712828116878305891216156123fa576123fa611db2565b6000871292508782058712848416161561241657612416611db2565b8785058712818416161561242c5761242c611db2565b505050929093029392505050565b600081600019048311821515161561245457612454611db2565b50029056fea264697066735822122061341b4f8247af3d1d5b75ebf283499ef4aa5332b59d269e30cc2b461e46f15b64736f6c63430008090033",
  "deployedBytecode": "0x6080604052600436106100f95760003560e01c80621da492146100fe57806312e0dc2e146101135780631b1723f31461014c5780631c0307031461015f5780631d8f3455146101825780632598125e1461018a57806341013fec146101b757806342cd54b3146101ca57806347fc43061461021757806364ec8bdb1461021f578063697e0f6314610227578063802cfba91461024757806383ce57b3146102795780639af020ca146102815780639c9b02b3146102a1578063a988daab146102b4578063aa556f0a146102e1578063d41977cd146102f4578063e884005014610328578063fb62cba214610357578063fed216cb14610377575b600080fd5b61011161010c36600461182f565b61038a565b005b34801561011f57600080fd5b5061013361012e3660046118c0565b610559565b604051610143949392919061196b565b60405180910390f35b61011161015a3660046119b5565b610605565b34801561016b57600080fd5b50610174610758565b604051908152602001610143565b610111610775565b34801561019657600080fd5b506101aa6101a5366004611a5c565b6108a3565b6040516101439190611abd565b6101116101c53660046119b5565b610934565b3480156101d657600080fd5b506101ea6101e5366004611ad0565b6109de565b604080516001600160a01b0395861681529490931660208501529183015215156060820152608001610143565b610111610a7d565b610111610b70565b34801561023357600080fd5b50610174610242366004611b09565b610c17565b34801561025357600080fd5b50610267610262366004611a5c565b610d11565b60405161014396959493929190611b7d565b610111610e86565b34801561028d57600080fd5b5061017461029c366004611b09565b610fb3565b6101116102af366004611bed565b6110a4565b3480156102c057600080fd5b506102d46102cf366004611ad0565b6111dd565b6040516101439190611c88565b6101116102ef366004611a5c565b61126e565b34801561030057600080fd5b506101747f000000000000000000000000000000000000000000000000000000000000000081565b34801561033457600080fd5b50610348610343366004611c9b565b611436565b60405161014393929190611cbd565b34801561036357600080fd5b50610174610372366004611ce2565b6114dc565b610111610385366004611ce2565b6114f5565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906103b9903390600401611cfb565b60206040518083038186803b1580156103d157600080fd5b505afa1580156103e5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906104099190611d24565b6104265760405163b497730b60e01b815260040160405180910390fd5b6004805460405163e2b4e9d760e01b81526001600160a01b039091169163e2b4e9d79161045d918891889188918891339101611d3f565b600060405180830381600087803b15801561047757600080fd5b505af115801561048b573d6000803e3d6000fd5b505050506000600460009054906101000a90046001600160a01b03166001600160a01b03166355081c9b6040518163ffffffff1660e01b815260040160206040518083038186803b1580156104df57600080fd5b505afa1580156104f3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105179190611d99565b90508061052381611dc8565b6040519092508291507f33b6e53ee793e8e84617722a3a50d47a8e7d2fc6c8a9363618477275eae1932b90600090a25050505050565b600480546040516309706e1760e11b81526060928392600092849284928392839283926001600160a01b0316916312e0dc2e9161059c918f918f918f9101611ddf565b60006040518083038186803b1580156105b457600080fd5b505afa1580156105c8573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105f09190810190611e4d565b929e919d509b50909950975050505050505050565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890610634903390600401611cfb565b60206040518083038186803b15801561064c57600080fd5b505afa158015610660573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106849190611d24565b6106a15760405163b497730b60e01b815260040160405180910390fd5b600254604051631eccd7cf60e31b81526001600160a01b039091169063f666be78906106d99087908790879087903390600401611ed2565b600060405180830381600087803b1580156106f357600080fd5b505af1158015610707573d6000803e3d6000fd5b50505050336001600160a01b03167f3d07b9f1f975d610aea6ae2fcd07dfba86fadf3caeb47461d5d40c2abf86947c8585858560405161074a9493929190611f2e565b60405180910390a250505050565b600154600090610770906001600160a01b031661161f565b905090565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906107a4903390600401611cfb565b60206040518083038186803b1580156107bc57600080fd5b505afa1580156107d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107f49190611d24565b6108115760405163b497730b60e01b815260040160405180910390fd5b6002546040516319edd2f160e31b81526001600160a01b039091169063cf6e978890610844906000903390600401611f79565b600060405180830381600087803b15801561085e57600080fd5b505af1158015610872573d6000803e3d6000fd5b50506040513392507f32fb7661fd058308b00ede495bce1be038170313f49a5f00924aed9f39aef6319150600090a2565b6003546040516312cc092f60e11b81526060916000916001600160a01b0390911690632598125e906108d9908690600401611cfb565b60006040518083038186803b1580156108f157600080fd5b505afa158015610905573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261092d919081019061202f565b9392505050565b6002546040516315b911ed60e01b81526001600160a01b03909116906315b911ed9061096c9087908790879087903390600401611ed2565b600060405180830381600087803b15801561098657600080fd5b505af115801561099a573d6000803e3d6000fd5b505033600081815260056020526040808220829055519193507f2cd59e760e4c4d106d987981bf61165f35055aa77cd80014aa1b0b865b79a8e7925090a250505050565b6003546040516397aaf41560e01b8152600091829182918291829182916001600160a01b03909116906397aaf41590610a1d908b908b90600401612063565b604080518083038186803b158015610a3457600080fd5b505afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c919061207d565b989997989097909650945050505050565b336001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001614610ac65760405163295c73e760e21b815260040160405180910390fd5b600080546040516001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691908381818185875af1925050503d8060008114610b31576040519150601f19603f3d011682016040523d82523d6000602084013e610b36565b606091505b5050905080610b4457600080fd5b6040517f7e64e73c171e8ef4ba5ab41df4e022dfe19c81ed5ad3d60831f775de5082afab90600090a150565b336000818152600560205260408082205490518391908381818185875af1925050503d8060008114610bbe576040519150601f19603f3d011682016040523d82523d6000602084013e610bc3565b606091505b5050905080610bd157600080fd5b6001600160a01b0382166000908152600560205260408082208290555133917f6d6d323e74699f5bbd9e290e4b14e53cfca81320035110f96ae1e656cd21ea6291a25050565b60008251604114610c435760405162461bcd60e51b8152600401610c3a906120a9565b60405180910390fd5b60208381015160408086015160608701518251600080825295019283905292939092811a91600190610c7c9088908590889088906120db565b6020604051602081039080840390855afa158015610c9e573d6000803e3d6000fd5b5050506020604051035190507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316816001600160a01b03161415610cf257600054945050505050610d0b565b60405163295c73e760e21b815260040160405180910390fd5b92915050565b60025460405162d9937f60e31b815260609182918291600091829184916001600160a01b03909116906306cc9bf890610d4e908a90600401611cfb565b60206040518083038186803b158015610d6657600080fd5b505afa158015610d7a573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d9e9190611d24565b610dbb5760405163b497730b60e01b815260040160405180910390fd5b600080600080600080600260009054906101000a90046001600160a01b03166001600160a01b031663802cfba98e6040518263ffffffff1660e01b8152600401610e059190611cfb565b60006040518083038186803b158015610e1d57600080fd5b505afa158015610e31573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610e599190810190612154565b9550955095509550955095508585858585859b509b509b509b509b509b5050505050505091939550919395565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890610eb5903390600401611cfb565b60206040518083038186803b158015610ecd57600080fd5b505afa158015610ee1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f059190611d24565b610f225760405163b497730b60e01b815260040160405180910390fd5b6002546040516319edd2f160e31b81526001600160a01b039091169063cf6e978890610f55906001903390600401611f79565b600060405180830381600087803b158015610f6f57600080fd5b505af1158015610f83573d6000803e3d6000fd5b50506040513392507e350905414c6ed448b7b0072755e0fe1a3205836aab10bf105c33b29130eae39150600090a2565b600080610fc083856116aa565b60025460405163802cfba960e01b81529192506000916001600160a01b039091169063802cfba990610ff6908590600401611cfb565b60006040518083038186803b15801561100e57600080fd5b505afa158015611022573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f1916820160405261104a9190810190612154565b50509350505050816001600160a01b0316816001600160a01b0316141561108b57506001600160a01b03166000908152600560205260409020549050610d0b565b60405163282db49760e21b815260040160405180910390fd5b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf8906110d3903390600401611cfb565b60206040518083038186803b1580156110eb57600080fd5b505afa1580156110ff573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111239190611d24565b6111405760405163b497730b60e01b815260040160405180910390fd5b600480546040516396e4d3cf60e01b81526001600160a01b03909116916396e4d3cf916111799189918991899189918991339101612219565b600060405180830381600087803b15801561119357600080fd5b505af11580156111a7573d6000803e3d6000fd5b50506040518792507fbe2e2bf5fc0a98440d16b85c2165bb0a09f4c1f634bf30a3d0e87754ffa527219150600090a25050505050565b6004805460405163a988daab60e01b81526060926000926001600160a01b03169163a988daab91611212918791899101612063565b60006040518083038186803b15801561122a57600080fd5b505afa15801561123e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052611266919081019061227a565b949350505050565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf89061129d908490600401611cfb565b60206040518083038186803b1580156112b557600080fd5b505afa1580156112c9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112ed9190611d24565b61130a5760405163b497730b60e01b815260040160405180910390fd5b600354604051631b249ca160e21b81526001600160a01b03838116600483015233602483015234604483015290911690636c92728490606401600060405180830381600087803b15801561135d57600080fd5b505af1158015611371573d6000803e3d6000fd5b5050505060007f0000000000000000000000000000000000000000000000000000000000000000346113a391906122ae565b905060006113b182346122d0565b6001600160a01b0384166000908152600560205260408120805492935083929091906113de9084906122e7565b92505081905550816000808282546113f691906122e7565b90915550506040516001600160a01b0384169033907fd7a44d13a7c24c7dfe120f5b6d78d2adee4f81127d02c225d51dcf8d49070e2090600090a3505050565b600254604051630e88400560e41b8152600481018490526024810183905260609160009182918291829182916001600160a01b039091169063e88400509060440160006040518083038186803b15801561148f57600080fd5b505afa1580156114a3573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526114cb91908101906122ff565b919750955093505050509250925092565b600154600090610d0b906001600160a01b03168361173e565b60025460405162d9937f60e31b81526001600160a01b03909116906306cc9bf890611524903390600401611cfb565b60206040518083038186803b15801561153c57600080fd5b505afa158015611550573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115749190611d24565b6115915760405163b497730b60e01b815260040160405180910390fd5b600480546040516345bce96d60e01b81529182018390523360248301526001600160a01b0316906345bce96d90604401600060405180830381600087803b1580156115db57600080fd5b505af11580156115ef573d6000803e3d6000fd5b50506040517fb9bf1aacfafccd6f4a342702950c6394ef7007c8942a5efff36d66ac4c84c2ed925060009150a150565b600080826001600160a01b031663feaf968c6040518163ffffffff1660e01b815260040160a06040518083038186803b15801561165b57600080fd5b505afa15801561166f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116939190612365565b505050915050806402540be40061092d91906123b5565b600081516041146116cd5760405162461bcd60e51b8152600401610c3a906120a9565b60208281015160408085015160608601518251600080825295019283905292939092811a916001906117069089908590889088906120db565b6020604051602081039080840390855afa158015611728573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b60008061174a8461161f565b611762846a0c097ce7bc90715b34b9f160241b61243a565b61126691906122ae565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f191681016001600160401b03811182821017156117aa576117aa61176c565b604052919050565b60006001600160401b038211156117cb576117cb61176c565b50601f01601f191660200190565b600082601f8301126117ea57600080fd5b81356117fd6117f8826117b2565b611782565b81815284602083860101111561181257600080fd5b816020850160208301376000918101602001919091529392505050565b6000806000806080858703121561184557600080fd5b84356001600160401b038082111561185c57600080fd5b611868888389016117d9565b9550602087013591508082111561187e57600080fd5b61188a888389016117d9565b94506040870135935060608701359150808211156118a757600080fd5b506118b4878288016117d9565b91505092959194509250565b6000806000606084860312156118d557600080fd5b8335925060208401356001600160401b038111156118f257600080fd5b6118fe868287016117d9565b925050604084013590509250925092565b60005b8381101561192a578181015183820152602001611912565b83811115611939576000848401525b50505050565b6000815180845261195781602086016020860161190f565b601f01601f19169290920160200192915050565b60808152600061197e608083018761193f565b8281036020840152611990818761193f565b905084604084015282810360608401526119aa818561193f565b979650505050505050565b600080600080608085870312156119cb57600080fd5b84356001600160401b03808211156119e257600080fd5b6119ee888389016117d9565b95506020870135915080821115611a0457600080fd5b611a10888389016117d9565b94506040870135915080821115611a2657600080fd5b50611a33878288016117d9565b949793965093946060013593505050565b6001600160a01b0381168114611a5957600080fd5b50565b600060208284031215611a6e57600080fd5b813561092d81611a44565b600081518084526020808501945080840160005b83811015611ab25781516001600160a01b031687529582019590820190600101611a8d565b509495945050505050565b60208152600061092d6020830184611a79565b60008060408385031215611ae357600080fd5b8235611aee81611a44565b91506020830135611afe81611a44565b809150509250929050565b60008060408385031215611b1c57600080fd5b82356001600160401b03811115611b3257600080fd5b611b3e858286016117d9565b95602094909401359450505050565b600081518084526020808501945080840160005b83811015611ab257815187529582019590820190600101611b61565b60c081526000611b9060c083018961193f565b8281036020840152611ba2818961193f565b90508281036040840152611bb6818861193f565b6001600160a01b03871660608501526080840186905283810360a08501529050611be08185611b4d565b9998505050505050505050565b600080600080600060a08688031215611c0557600080fd5b8535945060208601356001600160401b0380821115611c2357600080fd5b611c2f89838a016117d9565b95506040880135915080821115611c4557600080fd5b611c5189838a016117d9565b9450606088013593506080880135915080821115611c6e57600080fd5b50611c7b888289016117d9565b9150509295509295909350565b60208152600061092d6020830184611b4d565b60008060408385031215611cae57600080fd5b50508035926020909101359150565b606081526000611cd06060830186611a79565b60208301949094525060400152919050565b600060208284031215611cf457600080fd5b5035919050565b6001600160a01b0391909116815260200190565b80518015158114611d1f57600080fd5b919050565b600060208284031215611d3657600080fd5b61092d82611d0f565b60a081526000611d5260a083018861193f565b8281036020840152611d64818861193f565b90508560408401528281036060840152611d7e818661193f565b91505060018060a01b03831660808301529695505050505050565b600060208284031215611dab57600080fd5b5051919050565b634e487b7160e01b600052601160045260246000fd5b600081611dd757611dd7611db2565b506000190190565b838152606060208201526000611df8606083018561193f565b9050826040830152949350505050565b600082601f830112611e1957600080fd5b8151611e276117f8826117b2565b818152846020838601011115611e3c57600080fd5b61126682602083016020870161190f565b60008060008060808587031215611e6357600080fd5b84516001600160401b0380821115611e7a57600080fd5b611e8688838901611e08565b95506020870151915080821115611e9c57600080fd5b611ea888838901611e08565b9450604087015193506060870151915080821115611ec557600080fd5b506118b487828801611e08565b60a081526000611ee560a083018861193f565b8281036020840152611ef7818861193f565b90508281036040840152611f0b818761193f565b606084019590955250506001600160a01b03919091166080909101529392505050565b608081526000611f41608083018761193f565b8281036020840152611f53818761193f565b90508281036040840152611f67818661193f565b91505082606083015295945050505050565b91151582526001600160a01b0316602082015260400190565b60006001600160401b03821115611fab57611fab61176c565b5060051b60200190565b8051611d1f81611a44565b600082601f830112611fd157600080fd5b81516020611fe16117f883611f92565b82815260059290921b8401810191818101908684111561200057600080fd5b8286015b8481101561202457805161201781611a44565b8352918301918301612004565b509695505050505050565b60006020828403121561204157600080fd5b81516001600160401b0381111561205757600080fd5b61126684828501611fc0565b6001600160a01b0392831681529116602082015260400190565b6000806040838503121561209057600080fd5b825191506120a060208401611d0f565b90509250929050565b6020808252601890820152770d2dcecc2d8d2c840e6d2cedcc2e8eae4ca40d8cadccee8d60431b604082015260600190565b93845260ff9290921660208401526040830152606082015260800190565b600082601f83011261210a57600080fd5b8151602061211a6117f883611f92565b82815260059290921b8401810191818101908684111561213957600080fd5b8286015b84811015612024578051835291830191830161213d565b60008060008060008060c0878903121561216d57600080fd5b86516001600160401b038082111561218457600080fd5b6121908a838b01611e08565b975060208901519150808211156121a657600080fd5b6121b28a838b01611e08565b965060408901519150808211156121c857600080fd5b6121d48a838b01611e08565b95506121e260608a01611fb5565b94506080890151935060a08901519150808211156121ff57600080fd5b5061220c89828a016120f9565b9150509295509295509295565b86815260c06020820152600061223260c083018861193f565b8281036040840152612244818861193f565b9050856060840152828103608084015261225e818661193f565b91505060018060a01b03831660a0830152979650505050505050565b60006020828403121561228c57600080fd5b81516001600160401b038111156122a257600080fd5b611266848285016120f9565b6000826122cb57634e487b7160e01b600052601260045260246000fd5b500490565b6000828210156122e2576122e2611db2565b500390565b600082198211156122fa576122fa611db2565b500190565b60008060006060848603121561231457600080fd5b83516001600160401b0381111561232a57600080fd5b61233686828701611fc0565b93505060208401519150604084015190509250925092565b80516001600160501b0381168114611d1f57600080fd5b600080600080600060a0868803121561237d57600080fd5b6123868661234e565b94506020860151935060408601519250606086015191506123a96080870161234e565b90509295509295909350565b60006001600160ff1b03818413828413808216868404861116156123db576123db611db2565b600160ff1b60008712828116878305891216156123fa576123fa611db2565b6000871292508782058712848416161561241657612416611db2565b8785058712818416161561242c5761242c611db2565b505050929093029392505050565b600081600019048311821515161561245457612454611db2565b50029056fea264697066735822122061341b4f8247af3d1d5b75ebf283499ef4aa5332b59d269e30cc2b461e46f15b64736f6c63430008090033",
  "devdoc": {
    "kind": "dev",
    "methods": {},
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 1270,
        "contract": "contracts/Main.sol:Main",
        "label": "balance",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 1279,
        "contract": "contracts/Main.sol:Main",
        "label": "s_priceFeed",
        "offset": 0,
        "slot": "1",
        "type": "t_contract(AggregatorV3Interface)45"
      },
      {
        "astId": 1282,
        "contract": "contracts/Main.sol:Main",
        "label": "creators_ref",
        "offset": 0,
        "slot": "2",
        "type": "t_contract(Creators)1253"
      },
      {
        "astId": 1285,
        "contract": "contracts/Main.sol:Main",
        "label": "subscriptions_ref",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(Subscriptions)2616"
      },
      {
        "astId": 1288,
        "contract": "contracts/Main.sol:Main",
        "label": "content_ref",
        "offset": 0,
        "slot": "4",
        "type": "t_contract(Content)483"
      },
      {
        "astId": 1292,
        "contract": "contracts/Main.sol:Main",
        "label": "creatorBalance",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_address,t_uint256)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AggregatorV3Interface)45": {
        "encoding": "inplace",
        "label": "contract AggregatorV3Interface",
        "numberOfBytes": "20"
      },
      "t_contract(Content)483": {
        "encoding": "inplace",
        "label": "contract Content",
        "numberOfBytes": "20"
      },
      "t_contract(Creators)1253": {
        "encoding": "inplace",
        "label": "contract Creators",
        "numberOfBytes": "20"
      },
      "t_contract(Subscriptions)2616": {
        "encoding": "inplace",
        "label": "contract Subscriptions",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}